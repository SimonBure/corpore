// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}


model Exercise {
  id                     Int    @id @default(autoincrement())
  name                   String @unique
  category               ExerciseCategory
  muscleGroups           String // JSON array of key muscles
  equipmentNeeded        String?
  instructions           String?
  isCustom               Boolean @default(false)
  isDurationBased        Boolean @default(false)  // Pour exercices de maintien
  
  defaultSets            Int @default(3)
  defaultReps            Int?              // Null si basé sur durée
  defaultDuration        Int?              // En secondes pour exercices de durée
  defaultRestBetweenSets Int @default(60)
  defaultRestAfter       Int @default(60)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  
  sessionExercises       SessionExercise[]
}

enum ExerciseCategory {
  FORCE
  CARDIO
}

model Session {
  id                String            @id @default(cuid())
  title             String
  date              DateTime          @default(now())
  warmupSeconds     Int               @default(0)
  isTemplate        Boolean           @default(false)
  duration          Int?
  completed         Boolean           @default(false)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  sessionExercises  SessionExercise[]
}

model SessionExercise {
  id                String   @id @default(cuid())
  exerciseId        Int
  sessionId         String
  order             Int
  sets              Int
  reps              Int?     // Null pour les exercices de durée
  durationSeconds   Int?     // Pour exercices de maintien
  restBetweenSets   Int
  restAfter         Int
  weight            String?  // JSON array of weights per set
  actualSets        Int?     // sets actually completed
  actualReps        String?  // JSON array of actual reps per set
  
  exercise          Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  session           Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([exerciseId])
  @@index([sessionId])
}

model Photo {
  id           String   @id @default(cuid())
  userId       String?  // Optional user association for future multi-user support
  filename     String
  originalName String?
  captureDate  DateTime @default(now())
  notes        String?
  fileSize     Int
  mimeType     String
  width        Int?
  height       Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([captureDate])
  @@index([userId])
}
